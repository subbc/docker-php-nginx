FROM alpine:3.6

# these get automatically installed and removed by "docker-php-ext-*" (unless they're already installed)
ENV PHPIZE_DEPS \
		autoconf m4 \
		dpkg-dev dpkg \
		file libgcc \
		g++ \
		gcc \
		libc-dev \
		make \
		pkgconf \
		re2c \
		linux-headers \
		gnupg

# persistent / runtime deps
RUN apk add --no-cache --virtual .persistent-deps \
		ca-certificates findutils \
		curl curl-dev git \
		tar zlib-dev \
		xz libressl-dev \
		libressl libtool 
                
# ensure www user exists
RUN set -x \
	&& addgroup -g 82 -S www \
	&& adduser -u 82 -D -S -G www www \
	&& mkdir -p /usr/share/nginx/html

ENV PHP_INI_DIR /usr/local/etc/php
RUN mkdir -p $PHP_INI_DIR/conf.d

##<autogenerated>##
ENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=www --with-fpm-group=www --enable-maintainer-zts --with-pear --disable-cgi
##</autogenerated>##

ENV PHP_CFLAGS="-fstack-protector-strong -fpic -fpie -O2"
ENV PHP_CPPFLAGS="$PHP_CFLAGS"
ENV PHP_LDFLAGS="-Wl,-O1 -Wl,--hash-style=both -pie"

ENV GPG_KEYS A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0 528995BFEDFBA7191D46839EF9BA0ADA31CBD89E 1729F83938DA44E27BA0F4D3DBDB397470D12172

ENV PHP_VERSION 7.1.18
ENV PHP_URL="https://secure.php.net/get/php-7.1.18.tar.xz/from/this/mirror" PHP_ASC_URL="https://secure.php.net/get/php-7.1.18.tar.xz.asc/from/this/mirror"
ENV PHP_SHA256="8bd91cea072ea5b368cc9b4533a1a683eb426abdacbf024bb6ffa9b799cd3b01" PHP_MD5=""

RUN set -xe; \
	\
	apk add --no-cache --virtual .fetch-deps \
		gnupg \
		wget \
	; \
	\
	mkdir -p /usr/src; \
	cd /usr/src; \
	\
	wget -O php.tar.xz "$PHP_URL"; \
	\
	if [ -n "$PHP_SHA256" ]; then \
		echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -; \
	fi; \
	if [ -n "$PHP_MD5" ]; then \
		echo "$PHP_MD5 *php.tar.xz" | md5sum -c -; \
	fi; \
	\
	if [ -n "$PHP_ASC_URL" ]; then \
		wget -O php.tar.xz.asc "$PHP_ASC_URL"; \
		export GNUPGHOME="$(mktemp -d)"; \
		for key in $GPG_KEYS; do \
			gpg --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
		done; \
		gpg --batch --verify php.tar.xz.asc php.tar.xz; \
		rm -rf "$GNUPGHOME"; \
	fi; \
	\
	apk del .fetch-deps

COPY docker-php-source /usr/local/bin/

RUN set -xe \
	&& apk add --no-cache --virtual .build-deps \
		$PHPIZE_DEPS \
		coreutils \
		libedit-dev krb5-dev \
		recode-dev krb5-libs \
		libxml2-dev readline-dev \
		sqlite-dev ncurses-dev \
		pcre-dev cyrus-sasl-dev \
		zlib-dev openldap-dev openldap \
		libxslt-dev libvpx-dev \
		gd-dev libxpm-dev \
		perl-dev libjpeg \
		libcurl fontconfig-dev \
		musl-dev e2fsprogs-dev \
		libmcrypt-dev libwebp-dev \
		libpng-dev bison \
		icu-dev libevent-dev \
		libffi-dev gettext-dev \
		freetype-dev \
		libjpeg-turbo-dev \
	&& export CFLAGS="$PHP_CFLAGS" \
		CPPFLAGS="$PHP_CPPFLAGS" \
		LDFLAGS="$PHP_LDFLAGS" \
	&& docker-php-source extract \
	&& cd /usr/src/php \
	&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
	&& ./configure \
		--build="$gnuArch" \
		--with-config-file-path="$PHP_INI_DIR" \
		--with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
		--enable-option-checking=fatal --enable-re2c-cgoto \
		--enable-mysqlnd --with-mysqli --with-pdo-mysql \
		--with-pcre-dir --with-pcre-jit --enable-libgcc \
		--with-libxml-dir=/usr --with-openssl --with-kerberos --with-system-ciphers \
		--with-zlib --with-zlib-dir=/usr --enable-bcmath --enable-calendar \
		--with-curl --enable-exif --with-openssl-dir=/usr --with-gd \
		--with-webp-dir --with-jpeg-dir --with-png-dir --with-xpm-dir \
		--with-freetype-dir --enable-gd-native-ttf \
		--with-gettext --with-mhash --enable-intl \
		--with-icu-dir=/usr --with-ldap --with-ldap-sasl --enable-mbstring \
		--with-mcrypt=/usr --enable-pcntl --with-readline \
		--with-recode --enable-shmop  --enable-soap --enable-sockets \
		--enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-wddx \
		--with-xmlrpc --with-iconv-dir=/usr --with-xsl \
		--with-libedit \
		$(test "$gnuArch" = 's390x-linux-gnu') \
		$PHP_EXTRA_CONFIGURE_ARGS \
	&& make -j "$(nproc)" \
	&& make install \
	&& make clean && cd / \
	&& rm -fr /usr/src/*

ENV IGBINARY_VERSION=2.0.7 MSGPACK_VERSION=2.0.2 APCU_VERSION=5.1.12 MONGODB_VERSION=1.5.1 \
	REDIS_VERSION=4.1.0 RAR_VERSION=4.0.0 SWOOLE_VERSION=4.0.2
	
RUN set -xe \
	&& mkdir -p /tmp/temp \
	&& cd /tmp/temp \
	&& curl -fsSL http://pecl.php.net/get/igbinary-${IGBINARY_VERSION}.tgz -o igbinary.tgz \
	&& pecl install igbinary.tgz \
	&& curl -fsSL http://pecl.php.net/get/msgpack-${MSGPACK_VERSION}.tgz -o msgpack.tgz \
	&& pecl install msgpack.tgz \
	&& curl -fsSL http://pecl.php.net/get/apcu-${APCU_VERSION}.tgz -o apcu.tgz \ 
	&& pecl install apcu.tgz \
	&& curl -fsSL http://pecl.php.net/get/mongodb-${MONGODB_VERSION}.tgz -o mongodb.tgz \
	&& pecl install mongodb.tgz \
	&& curl -fsSL http://pecl.php.net/get/rar-${RAR_VERSION}.tgz -o rar.tgz \
	&& pecl install rar.tgz \
	&& curl -fsSL http://pecl.php.net/get/redis-${REDIS_VERSION}.tgz -o redis.tgz \
	&& pecl install redis.tgz \
	&& curl -fsSL http://pecl.php.net/get/swoole-${SWOOLE_VERSION}.tgz -o swoole.tgz \
	&& pecl install swoole.tgz \
	&& cd / \
	&& rm -fr /tmp/temp

ENV IMAGICK_VERSION=3.4.3 MEMCACHED_VERSION=3.0.4
	
RUN set -xe \
    && mkdir -p /tmp/tmp/cphalcon /tmp/tmp/memcached \
	&& cd /tmp/tmp \
	&& apk add --no-cache --virtual .build-deps \
		imagemagick-dev hiredis-dev libmemcached-dev gcc \
	&& curl -fsSL http://pecl.php.net/get/imagick-${IMAGICK_VERSION}.tgz -o imagick.tar.gz \
	&& pecl install imagick.tar.gz \
	&& curl -fsSL https://github.com/nrk/phpiredis/archive/v1.0.0.tar.gz -o phpiredis.tar.gz \
	&& tar zxf phpiredis.tar.gz --strip-components=1 \
	&& /usr/local/bin/phpize \
	&& ./configure --with-php-config=/usr/local/bin/php-config --enable-phpiredis \
	&& make -j "$(nproc)" && make install  \
	&& curl -fsSL http://pecl.php.net/get/memcached-${MEMCACHED_VERSION}.tgz -o memcached.tgz \
	&& tar zxf memcached.tgz -C /tmp/tmp/memcached --strip-components=1 \
	&& cd /tmp/tmp/memcached \
	&& /usr/local/bin/phpize \
	&& ./configure --with-php-config=/usr/local/bin/php-config --enable-memcached \
		--enable-memcached-igbinary \
		--enable-memcached-msgpack \
		--enable-memcached-json \
		--with-libmemcached-dir \
	&& make -j "$(nproc)" && make install  \
	&& curl -fsSL https://github.com/phalcon/cphalcon/archive/v3.3.2.tar.gz -o cphalcon.tar.gz \
	&& tar zxf cphalcon.tar.gz -C /tmp/tmp/cphalcon --strip-components=1 \
	&& cd /tmp/tmp/cphalcon/build \
	&& sh install \
	&& cd / \
	&& rm -fr /tmp/tmp 
	
RUN set -xe \
	&& cd / \
	&& { find /usr/local/bin /usr/local/sbin -type f -perm -0111 -exec strip --strip-all '{}' + || true; } \
	&& docker-php-source delete \ 
	&& runDeps="$( \
		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local \
			| tr ',' '\n' \
			| sort -u \
			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
	)" \
	&& apk add --no-cache --virtual .php-rundeps $runDeps \
	\
	&& apk del .build-deps \
	\
	&& pecl update-channels \
	&& rm -rf ~/.pearrc \
	&& php composer config -g repo.packagist composer https://packagist.phpcomposer.com \
	&& cd /data/web 

COPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/
COPY composer /usr/local/bin/
COPY etc/www.conf /usr/local/etc/php-fpm.d/
COPY etc/php.ini /usr/local/etc/php/

ENTRYPOINT ["docker-php-entrypoint"]
##<autogenerated>##
#WORKDIR /data/web

RUN set -ex \
	&& cd /usr/local/etc \
	&& echo 'daemonize = no' >> php-fpm.conf \
	&& echo 'include=etc/php-fpm.d/*.conf' >> php-fpm.conf

EXPOSE 9000
CMD ["php-fpm"]
